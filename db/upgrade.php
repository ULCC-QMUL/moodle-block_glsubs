<?php
/**
 * Created by PhpStorm.
 * User: vasileios
 * Date: 28/10/2016
 * Time: 15:03

// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

 */


/**
 * @param $oldversion
 *
 * @return bool
 */
function xmldb_block_glsubs_upgrade($oldversion) {
    global $DB;
    $dbman = $DB->get_manager();

    if ($oldversion < 2016102600) {
        // Code to add the column, generated by the 'View PHP Code' option of the XMLDB editor.

        // Define field newcategories to be added to block_glsubs_glossaries_subs.
        $table = new xmldb_table('block_glsubs_glossaries_subs');
        $field = new xmldb_field('newcategories', XMLDB_TYPE_INTEGER, '1', null, null, null, null, 'active');

        // Conditionally launch add field newcategories.
        if (!$dbman->field_exists($table, $field)) {
            $dbman->add_field($table, $field);
        }

        // Define field newentriesuncategorised to be added to block_glsubs_glossaries_subs.
        $table = new xmldb_table('block_glsubs_glossaries_subs');
        $field = new xmldb_field('newentriesuncategorised', XMLDB_TYPE_INTEGER, '1', null, null, null, null, 'newcategories');

        // Conditionally launch add field newentriesuncategorised.
        if (!$dbman->field_exists($table, $field)) {
            $dbman->add_field($table, $field);
        }

        // Define field timecreated to be added to block_glsubs_event_subs_log.
        $table = new xmldb_table('block_glsubs_event_subs_log');
        $field = new xmldb_field('timecreated', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null, 'eventlink');

        // Conditionally launch add field timecreated.
        if (!$dbman->field_exists($table, $field)) {
            $dbman->add_field($table, $field);
        }

        // Define field timeprocessed to be added to block_glsubs_event_subs_log.
        $table = new xmldb_table('block_glsubs_event_subs_log');
        $field = new xmldb_field('timeprocessed', XMLDB_TYPE_INTEGER, '10', null, null, null, null, 'timecreated');

        // Conditionally launch add field timeprocessed.
        if (!$dbman->field_exists($table, $field)) {
            $dbman->add_field($table, $field);
        }


        // Define field eventtype to be added to block_glsubs_event_subs_log.
        $table = new xmldb_table('block_glsubs_event_subs_log');
        $field = new xmldb_field('eventtype', XMLDB_TYPE_CHAR, '1', null, XMLDB_NOTNULL, null, null, 'timeprocessed');

        // Conditionally launch add field eventtype.
        if (!$dbman->field_exists($table, $field)) {
            $dbman->add_field($table, $field);
        }

        // Define field active to be added to block_glsubs_authors_subs.
        $table = new xmldb_table('block_glsubs_authors_subs');
        $field = new xmldb_field('active', XMLDB_TYPE_INTEGER, '1', null, null, null, null, 'authorid');

        // Conditionally launch add field active.
        if (!$dbman->field_exists($table, $field)) {
            $dbman->add_field($table, $field);
        }

        // Define field eventtext to be added to block_glsubs_event_subs_log.
        $table = new xmldb_table('block_glsubs_event_subs_log');
        $field = new xmldb_field('eventtext', XMLDB_TYPE_TEXT, null, null, null, null, null, 'eventlink');

        // Conditionally launch add field eventtext.
        if (!$dbman->field_exists($table, $field)) {
            $dbman->add_field($table, $field);
        }

        // Define field id to be added to block_glsubs_event_subs_log.
        $table = new xmldb_table('block_glsubs_event_subs_log');
        $field = new xmldb_field('id', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, XMLDB_SEQUENCE, null, null);

        // Conditionally launch add field id.
        if (!$dbman->field_exists($table, $field)) {
            $dbman->add_field($table, $field);
        }


        // redefine index drop old format

        // Define index glossaryeventglossaryid (not unique) to be dropped form block_glsubs_event_subs_log.
        $table = new xmldb_table('block_glsubs_event_subs_log');
        $index = new xmldb_index('glossaryeventglossaryid', XMLDB_INDEX_NOTUNIQUE, array('glossaryid', 'processed' ));

        // Conditionally launch drop index glossaryeventglossaryid.
        if ($dbman->index_exists($table, $index)) {
            $dbman->drop_index($table, $index);
        }

        // and add new format of the index
        // Define index glossaryeventglossaryid (not unique) to be added to block_glsubs_event_subs_log.

        // Define index glossaryeventglossaryid (not unique) to be added to block_glsubs_event_subs_log.
        $table = new xmldb_table('block_glsubs_event_subs_log');
        $index = new xmldb_index('glossaryeventglossaryid', XMLDB_INDEX_NOTUNIQUE, array('glossaryid', 'processed', 'eventtype'));

        // Conditionally launch add index glossaryeventglossaryid.
        if (!$dbman->index_exists($table, $index)) {
            $dbman->add_index($table, $index);
        }

        // Define field contextinstanceid to be added to block_glsubs_event_subs_log.
        $table = new xmldb_table('block_glsubs_event_subs_log');
        $field = new xmldb_field('contextinstanceid', XMLDB_TYPE_INTEGER, '10', null, null, null, null, 'eventtext');

        // Conditionally launch add field contextinstanceid.
        if (!$dbman->field_exists($table, $field)) {
            $dbman->add_field($table, $field);
        }

        // Define field crud to be added to block_glsubs_event_subs_log.
        $table = new xmldb_table('block_glsubs_event_subs_log');
        $field = new xmldb_field('crud', XMLDB_TYPE_CHAR, '1', null, null, null, null, 'contextinstanceid');

        // Conditionally launch add field crud.
        if (!$dbman->field_exists($table, $field)) {
            $dbman->add_field($table, $field);
        }

        // Define field edulevel to be added to block_glsubs_event_subs_log.
        $table = new xmldb_table('block_glsubs_event_subs_log');
        $field = new xmldb_field('edulevel', XMLDB_TYPE_INTEGER, '1', null, null, null, null, 'crud');

        // Conditionally launch add field edulevel.
        if (!$dbman->field_exists($table, $field)) {
            $dbman->add_field($table, $field);
        }


        // Define table block_glsubs_messages_log to be created.
        $table = new xmldb_table('block_glsubs_messages_log');

        // Adding fields to table block_glsubs_messages_log.
        $table->add_field('id', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, XMLDB_SEQUENCE, null);
        $table->add_field('userid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
        $table->add_field('eventlogid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
        $table->add_field('timecreated', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
        $table->add_field('timedelivered', XMLDB_TYPE_INTEGER, '10', null, null, null, null);

        // Adding keys to table block_glsubs_messages_log.
        $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));

        // Adding indexes to table block_glsubs_messages_log.
        $table->add_index('glossarymessages', XMLDB_INDEX_NOTUNIQUE, array('userid', 'timecreated', 'timedelivered'));

        // Conditionally launch create table for block_glsubs_messages_log.
        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }

        // Define index glossarymessages (not unique) to be dropped form block_glsubs_messages_log.
        $table = new xmldb_table('block_glsubs_messages_log');
        $index = new xmldb_index('glossarymessages', XMLDB_INDEX_NOTUNIQUE, array('userid', 'timecreated', 'timedelivered'));

        // Conditionally launch drop index glossarymessages.
        if ($dbman->index_exists($table, $index)) {
            $dbman->drop_index($table, $index);
        }

        // Define index glossarymessages (not unique) to be added to block_glsubs_messages_log.
        $table = new xmldb_table('block_glsubs_messages_log');
        $index = new xmldb_index('glossarymessages', XMLDB_INDEX_NOTUNIQUE, array('userid', 'eventlogid', 'timecreated', 'timedelivered'));

        // Conditionally launch add index glossarymessages.
        if (!$dbman->index_exists($table, $index)) {
            $dbman->add_index($table, $index);
        }

        // Glsubs savepoint reached.
        upgrade_block_savepoint(true, 2016102600 , 'glsubs');
    }

    return true;
}